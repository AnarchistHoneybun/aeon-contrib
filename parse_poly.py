p = """x^156-28293184124737694080*x^150-50111580155260460844584241578962989056*x^1\
44+2000741892753026115892243757690184900091769801141945106432*x^138-6689833869\
884920066141475743520535508680559052015304499397212203049103130624*x^132+61567\
655077292765481659401661822113142354318933927874563814523445095495697517366799\
01247307776*x^126-381520842574997198674161043140450821355450171208063319247234\
88759543432766463641099223031913762482060169052160*x^120-278614791445398378691\
582277517200275475254215374243568447065739669129533228212900439982200907751701\
4397168296974400680697863864320*x^114+1585164055408008634764541421847990628448\
201383564778254157208549989039915612818011950714697494640213070044956331618331\
201033480861222528629063286784*x^108-35992631604648394375327982928787660846002\
180318713610094333290626081352607772511339300590739935025783466428753563545077\
8981949557310768189387775714926393025942781952*x^102+2909761076503781786120266\
365932567857590094676627211222956299715972073307220206936220087907152556115030\
628738699743289378769644555127764498377255810166600765360276294065958105068339\
2*x^96+17162311600600696305996850503546261750150689557572031097076498825775727\
731655483386111887147997752738829127312340140041235627196209128696229811853123\
86637525543829470533595866145631607760885722906624*x^90-4734702341177622534491\
143530735752272530511339500808870482204062017779236410876560579239086278604213\
478981111162759221955469774331761209629690455613818149497188939728972910287107\
48149921273892963880265171252944044032*x^84+3008263900520370358738439091483606\
641737592921683627749525512742964564108856485402665164262993260253630423925633\
888305595034251635205296745642793153670893670116468943364207971682286582545151\
7411212445927909524063734481575283370491904*x^78-51602427017873362849962306231\
131190902663074820614258671843826105031742431004798411383432177560008002619207\
196829856468120789901244594051412828581847570494107287103289257901724217249825\
6146144732370397366971600828731748910067376163611390633039626240*x^72-11784090\
207202014162295386617819122580975749672866993427537075993392758066192465164322\
165415699997447946113816444451865902475946080059998736123233932142195687596120\
620775313704725043713670267057116323795251403918781211539279372041111665200731\
953898028103168618921984*x^66+257785868023252499546719038629025522238370895088\
838886132974669167861057091364847664488796999614147085642953811171182098166013\
025545859882309438475565596820726130902460185426222014793570631782686609398943\
162320798462220946658785090792728810983258963716578939056822038673472371032064\
*x^60-178106744579262701220341169991478975191755896431771900731724642490060823\
547579772178145940714345807061825090040116071753730419325739157691211386125433\
858972565481152422598947085663946742091336491895824893612142423740168087607117\
3527822994467656057208698530802400487646077493116544189557449970155520*x^54+72\
061035721926607133782064416353422189174897173046479924238537132713862614689157\
078729244050112126781445863631557105732805564741408300168740817264458581243156\
629165674937371992171109131424524059754570316427339260388665945460198673935295\
29573884911052196182095293632879922014565430281245217054716156649445034819584*\
x^48-2651501932696217418014297990985219200059802402500574129594064097861419882\
050837289524681184290042597735272772732185504334256423618126266957205464910715\
667532894279934660062457216762115549088247736567627209245067179437528333584107\
483967410403380241910951030362723011352521145892256181352447613221657471285446\
5367040031027145736192*x^42+64738333885402706154009400777843384948514403975131\
509466836736265603889387062685884838924226241494383359395885853573043385536386\
037715829201209541872597706855188799653603478660006394706968635342978467902539\
925660331269747297563569373972862258677268612185384308671129076702627081272278\
586910256050615727493523124564910427355844022903201664598016*x^36-360089463426\
472993452775336764650429925425093581620917079114858840631991886785851813070311\
540640297167152175485923920006464143113571139835609701413704519130982006358227\
870670678542575703272089389996969557062640735066731799711026833506141221278668\
504511530624917870931828673971275380039242583318260863112092061454688699115818\
22662684689775342390081444166762496*x^30-2166764645162112274632955464156252614\
409263332331259941101699041932310538509947606641416897248500257135450623527644\
476385819943926463599756930785426169832682953170385748702992916958737945625127\
043880912340319797534478086241222218033214818454087940884673426145723240759214\
731292433749563243888130606650025856644954403393629413809740960583403860620176\
5458164323353573757812736*x^24-30066064883114410898966830176883933101812375263\
935154831851681804542547530979733636357224074344873186546110624085496554770302\
502151822818918256725669952240098646744406329390391632709073518804383879768623\
829536301274752852320956059838102465806012043550619536319342061017822338085262\
618857630045881135183206348965190935550111101576049664402123095355255940546542\
93518320014613131809110622208*x^18-4610376454334794178940207213335203187427876\
377962228248617737052098892738695381583834276294166965543079006368778571631084\
779727075362770621937627899046637272903612842243735176008710572499987342071598\
499537585896914564572894619693823135613132259196678466504843544652878386695742\
632590137406286829557218623339449427976101177143493193404248888493771884333750\
19685712170554798874566289464703683278915239936*x^12-2163227968375553130214326\
836459370442929210286133834071578040692978315746409987406564890921206850084670\
286083318495792655352989190266569961206385211708493105803494307427142824586126\
908379249974239393585315192504390031038094741946538670524127300119848532743912\
089277477454950017685765770058520996588030855465148285895783307854029025143680\
37827033046816681733696103002335485194130317912396254882191766550071245537280*\
x^6+27578084871448383028954307699482484177292371088638694175094794599157673413\
233306972118647905936854663626428686856862805721964346802733802830121459611037\
606926262135051498014031420326308672052902948896779218529588632963160986795457\
582645554615236587109387894594224765082857130116401302524865685738744032792483\
695851695392136506189951269510197196422658686311058576638802668886157406871291\
17228288314207488263153874611799588864
"""
import re

def convert_polynomial(poly_str):
    # Regular expression to match terms in the polynomial
    term_pattern = re.compile(r'([+-]?\d+)(?:\*x(?:\^(\d+))?)?')
    
    # Function to process a single term
    def process_term(match):
        coeff = match.group(1)  # Coefficient (e.g., 2, -4, 1)
        exponent = match.group(2)  # Exponent (e.g., 3, or None)
        
        coeff_str = f'Integer::from_str("{coeff}").unwrap()'
        
        if exponent:
            return f'\n + {coeff_str} * x.pow({exponent})'
        elif '*x' in match.group(0):
            return f'\n + {coeff_str} * x'
        else:
            return f"\n + {coeff_str}"

    # Replace each term in the polynomial string
    converted_terms = [process_term(m) for m in term_pattern.finditer(poly_str)]

    # Join terms into the final string
    return ' '.join(converted_terms)


print(convert_polynomial(p))