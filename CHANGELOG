# Changelog

All notable changes to this project will be documented in this file.

## [Unreleased]

 - Ring of Integers
 - Ideal sum, product, intersection, containment, equality for integers and rings of integers.
 - Split Structure into SetStructure for sets and Structure.
 - Structures for morphisms, functions, injective functions, ring homomorphisms, principal subring, field of fractions inclusion...
 - Added try_to_int to CharZeroStructure.
 - Replaced the old CanonicalStructure with a derive proc macro to generate a canonical structure per type. This lets the canonical structure type be defined in the same crate as the type it is the canonical structure of and so lets foreign traits be defined for it.
 - Some structure bits for integral closures, dedekind domains, ideal factorization. None yet implemented but I plan to do implementations of these in the context of algebraic number fields.
 - Removed reference counters in favour of clones for structures - in most situations the structures are empty anyway.
 - Merged EqStructure and PartialEqStructure.


## [0.0.11] - 2025-03-2025

 - Lots of reorganizing where things are.
 - Added docs and examples to sets::combinatorics.
 - Mucking around trying to get `cargo ws` to work.
 - Added Lenstra elliptic-curve factorization for integers.
 - Added signature of a number field.
 - Removed old prime generator in favour of faster implementation in malachite.
 - Added gcd and factoring for multivariable polynomials over the integers.
 - Updated to rust 2024
 - Created algebraeon-nzq with new Natural, Integer and Rational types wrapping the malachite equivalents.
 - Nicer formatting of multivariable polynomial strings by omitting coefficients and powers equal to 1

## [0.0.10] - 2025-01-19

- Cantorâ€“Zassenhaus factorization algorithm over finite fields
- Distinct degree factorization over finite fields
- Quotient structure no longer requires the base ring to implement unique factorization.

## [0.0.9] - 2025-01-18

- P-adic root isolation.
- P-adic root arithmetic up to implementing field structure.